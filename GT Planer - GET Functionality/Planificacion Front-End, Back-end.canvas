{
	"nodes":[
		{"id":"7027a2f82968c4ba","type":"file","file":"Diagrama de flujo proyecto.md","x":-1260,"y":340,"width":938,"height":740},
		{"id":"5eb2dbfb555e6a05","type":"file","file":"Diseno Tablas para BBDD.md","x":-1260,"y":1120,"width":938,"height":740},
		{"id":"f58ae6cb058e6d3e","type":"file","file":"Proyecto GET en GTP.md","x":-1260,"y":-440,"width":938,"height":740},
		{"id":"f1229faabd10b69e","type":"file","file":"Cómo suele funcionar el proceso de desarrollo de software en un entorno que utiliza un backend en Azure Functions y un frontend en React..md","x":-1260,"y":1900,"width":938,"height":820},
		{"id":"44a11e340eb71dca","x":-280,"y":1900,"width":938,"height":820,"type":"text","text":"### Entendimiento de Bases de Datos\n\n1. **Identificación de Bases de Datos**:\n    \n    - **Base de Datos Original (\"gt-planner\")**: Contiene datos de proyectos, planificaciones, usuarios y horas trabajadas.\n    - **Base de Datos Nueva (\"gt-planner-get\")**: Para gestionar la nueva planificación, horas trabajadas y posiblemente datos adicionales.\n2. **Esquema de Base de Datos**:\n    \n    - Realiza un análisis exhaustivo del esquema de la base de datos existente.\n    - Si es necesario, crea un esquema de base de datos para la nueva aplicación que complemente o mejore el existente.\n    - Utiliza herramientas como **ERD (Entity-Relationship Diagrams)** para visualizar las relaciones y estructuras.\n3. **Consejos**:\n    \n    - **Normalización**: Asegúrate de que tus bases de datos estén normalizadas para evitar redundancias.\n    - **Índices y Optimización**: Crea índices adecuados para mejorar el rendimiento de las consultas.\n    - **Integridad Referencial**: Establece claves foráneas para mantener la consistencia entre tablas.\n\n### Diseño de la Aplicación Nueva\n\n1. **Interacción con Bases de Datos Existentes**:\n    \n    - Asegúrate de que la nueva aplicación pueda leer y escribir eficientemente en la base de datos existente.\n    - Considera usar **APIs** o **microservicios** para interactuar con las bases de datos.\n2. **Creación de Tablas Propias**:\n    \n    - Diseña tablas que reflejen los requisitos funcionales de tu nueva aplicación.\n    - Considera la posibilidad de crear vistas o tablas intermedias si es necesario para consolidar datos de múltiples fuentes.\n\n### Validación y Verificación de Datos\n\n1. **Controles en la Aplicación**:\n    \n    - Implementa validaciones de entrada de datos en la interfaz de usuario.\n    - Usa **triggers** o **procedimientos almacenados** en la base de datos para validar datos antes de que se realicen cambios.\n2. **Pruebas de Integridad de Datos**:\n    \n    - Realiza pruebas regulares de integridad de datos para asegurarte de que no haya corrupción o pérdida de datos.\n\n### Seguridad y Privacidad\n\n1. **Cumplimiento Normativo**:\n    \n    - Asegúrate de cumplir con las normativas locales e internacionales como **GDPR** o **HIPAA** según sea aplicable.\n2. **Medidas de Seguridad**:\n    \n    - Implementa **autenticación y autorización** robustas.\n    - Usa **encriptación** para datos sensibles.\n\n### Pruebas y Ajustes\n\n1. **Herramientas de Pruebas**:\n    \n    - Utiliza herramientas como **JMeter** o **Selenium** para pruebas de carga y de interfaz de usuario.\n    - Considera el uso de **frameworks de pruebas unitarias** para la lógica de la aplicación.\n2. **Entorno de Pruebas**:\n    \n    - Establece un entorno de pruebas que imite lo más posible el entorno de producción.\n3. **Monitoreo y Ajuste Continuo**:\n    \n    - Implementa herramientas de monitoreo y registro como **Prometheus**, **Grafana** o **ELK Stack**.\n    - Ajusta tu aplicación y base de datos basándote en los resultados de estas herramientas."},
		{"id":"cad56f2a1dbf89c7","x":-280,"y":1120,"width":938,"height":740,"type":"text","text":"**Tabla de Proyectos**\n1. **Tabla de Proyectos**: Almacena información sobre cada proyecto.\n    \n    - Campos: ID del Proyecto, Nombre del Proyecto, Descripción, Fecha de Inicio, Fecha de Finalización, etc.\n2. **Tabla de Empleados**: Contiene información sobre los empleados.\n    \n    - Campos: ID del Empleado, Nombre, Rol, Información de Contacto, etc.\n3. **Tabla de Asignaciones de Proyectos**: Relaciona empleados con proyectos.\n    \n    - Campos: ID de Asignación, ID del Proyecto, ID del Empleado, Rol en el Proyecto, etc.\n4. **Tabla de Planificación**: Almacena los detalles de la planificación de proyectos.\n    \n    - Campos: ID de Planificación, ID del Proyecto, Detalles de la Planificación, Fechas, Recursos Asignados, etc.\n5. **Tabla de Registro de Horas**: Para el seguimiento de las horas trabajadas por los empleados en los proyectos.\n    \n    - Campos: ID de Registro de Horas, ID del Empleado, ID del Proyecto, Horas Trabajadas, Fecha, etc.\n6. **Tabla de Historial de Cambios**: Registra los cambios en la asignación de recursos y otros aspectos relevantes del proyecto.\n    \n    - Campos: ID de Cambio, ID del Proyecto, Descripción del Cambio, Fecha del Cambio, etc.\n7. **Tabla de Autenticación de Usuarios**: Para gestionar el acceso de los empleados al sistema.\n    \n    - Campos: ID del Usuario, ID del Empleado, Credenciales, Rol, etc."}
	],
	"edges":[]
}